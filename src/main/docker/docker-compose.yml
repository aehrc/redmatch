version: '3'
volumes:
  onto:
    driver: local
  pgdata:
    driver: local
  mongodb_data_container:
services:
  db:
    image: postgres:12
    container_name: db
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - TZ=Australia/Brisbane
  ontoserver:
    build: ontoserver
    container_name: ontoserver
    depends_on:
      - db
    expose:
      - "8080"
    #ports:
      #- "8443:8443"
      #- "8080:8080"
    environment:
      - JAVA_OPTS=-Xmx8G
      - ONTOSERVER_INSECURE=true
      - ontoserver.security.enabled=false
      - ontoserver.security.readOnly.fhir=true
      #- ontoserver.fhir.base=http://ontoserver/fhir
    volumes:
      - onto:/var/onto
  mongo:
    image: mongo:4.2.6-bionic
    container_name: mongo
    #environment:
    #  MONGO_INITDB_ROOT_USERNAME: root
    #  MONGO_INITDB_ROOT_PASSWORD: rootpassword
    expose:
      - "27017"
    #ports:
      #- 27017:27017
    volumes:
      - mongodb_data_container:/data/db
  redmatch:
    image: aehrc/redmatch:0.9.0-SNAPSHOT
    container_name: redmatch
    depends_on:
      - mongo
    environment:
      - "SPRING_PROFILES_ACTIVE=prod"
    ports:
      - 8080:8080
