<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>au.csiro.redmatch</groupId>
  <artifactId>ui</artifactId>
  <version>1.2.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  
  <name>Redmatch UI</name>
  
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <dockerfile-maven.version>1.4.13</dockerfile-maven.version>
  </properties>

  <build>
    <plugins>
      <!-- Copies the grammar files from the server module. -->
	    <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <overwrite>true</overwrite>
              <outputDirectory>${project.basedir}/src/grammar</outputDirectory>
              <resources>          
                <resource>
                  <directory>../server/src/main/antlr4</directory>
                </resource>
              </resources>              
            </configuration>            
          </execution>
        </executions>
      </plugin>
	    <plugin>
		    <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>1.10.3</version>
        <configuration>
          <installDirectory>target</installDirectory>
        </configuration>
        <executions>
          <!-- Installs Node and Yarn. -->
          <execution>
          <id>install yarn</id>
          <goals>
            <goal>install-node-and-yarn</goal>
          </goals>
          <configuration>
            <nodeVersion>v12.10.0</nodeVersion>
            <yarnVersion>v1.22.5</yarnVersion>
          </configuration>
          </execution>
          <!-- Installs dependencies using Yarn. -->
          <execution>
          <id>yarn install</id>
          <goals>
            <goal>yarn</goal>
          </goals>
          </execution>
          <!-- Generates the typescript files for the ANTLR grammar that is copied from the server. -->
          <execution>
            <id>run antlr4ts</id>
            <goals>
              <goal>yarn</goal>
            </goals>
            <configuration>
              <arguments>antlr4ts</arguments>
            </configuration>
          </execution>
          <!-- Processess environment variables. -->
          <execution>
            <id>yarn prestart</id>
            <goals>
              <goal>yarn</goal>
            </goals>
            <configuration>
              <arguments>prestart</arguments>
            </configuration>
          </execution>
          <!-- Creates a production build to be used in the Docker image. -->
          <execution>
            <id>yarn build</id>
            <goals>
              <goal>yarn</goal>
            </goals>
            <configuration>
              <arguments>build</arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Used to create a Docker image. -->
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>dockerfile-maven-plugin</artifactId>
        <version>${dockerfile-maven.version}</version>
        <executions>
          <execution>
            <id>default</id>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <repository>aehrc/redmatch-ui</repository>
          <tag>${project.version}</tag>
          <skipDockerInfo>true</skipDockerInfo>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>